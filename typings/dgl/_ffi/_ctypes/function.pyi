"""
This type stub file was generated by pyright.
"""

import ctypes
from .types import DGLCFuncFinalizer

"""Function configuration API."""
FunctionHandle = ctypes.c_void_p
ModuleHandle = ctypes.c_void_p
DGLRetValueHandle = ctypes.c_void_p
DGL_FREE_PYOBJ = DGLCFuncFinalizer(_ctypes_free_resource)
def convert_to_dgl_func(pyfunc):
    """Convert a python function to DGL function

    Parameters
    ----------
    pyfunc : python function
        The python function to be converted.

    Returns
    -------
    dglfunc: dgl.nd.Function
        The converted dgl function.
    """
    ...

class FunctionBase:
    """Function base."""
    __slots__ = ...
    def __init__(self, handle, is_global) -> None:
        """Initialize the function with handle

        Parameters
        ----------
        handle : FunctionHandle
            the handle to the underlying function.

        is_global : bool
            Whether this is a global function in python
        """
        ...
    
    def __del__(self): # -> None:
        ...
    
    def __call__(self, *args): # -> c_void_p | bytearray:
        """Call the function with positional arguments

        args : list
           The positional arguments to the function call.
        """
        ...
    


def __init_handle_by_constructor__(fconstructor, args): # -> Any:
    """Initialize handle by constructor"""
    ...

_CLASS_MODULE = ...
_CLASS_FUNCTION = ...
