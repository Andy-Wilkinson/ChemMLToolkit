"""
This type stub file was generated by pyright.
"""

"""Module for variables."""
class VarType:
    """Variable types."""
    FEAT = ...
    FEAT_DICT = ...
    GRAPH = ...
    IDX = ...
    STR = ...
    FUNC = ...
    MAP = ...
    INT = ...


VAR_TYPE_NAME_MAP = ...
class Var:
    """Class for variables in IR.

    Variables represent data in the IR. A variable can contain concrete values.
    Otherwise, it can act as a "symbol", whose values are not materialized at
    the moment, but later.

    Parameters
    ----------
    name : str
        The variable name.
    type : int
        The type code.
    data : any, default=None (not concretized)
        The data.
    """
    __slots__ = ...
    def __init__(self, name, typecode, data) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def typestr(self): # -> str:
        """Return the type string of this variable."""
        ...
    


def new(typecode, data=..., name=...): # -> Var:
    """Create a new variable."""
    ...

def FEAT(data=..., name=...): # -> Var:
    """Create a variable for feature tensor."""
    ...

def FEAT_DICT(data=..., name=...): # -> Var:
    """Create a variable for feature dict."""
    ...

def GRAPH(data=..., name=...): # -> Var:
    """Create a variable for graph index lambda."""
    ...

def IDX(data=..., name=...): # -> Var:
    """Create a variable for index."""
    ...

def STR(data=..., name=...): # -> Var:
    """Create a variable for string value."""
    ...

def FUNC(data=..., name=...): # -> Var:
    """Create a variable for function."""
    ...

def MAP(data=..., name=...): # -> Var:
    """Create a variable for mapping lambda"""
    ...

def INT(data=..., name=...): # -> Var:
    """Create a variable for int value"""
    ...

