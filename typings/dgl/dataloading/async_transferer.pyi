"""
This type stub file was generated by pyright.
"""

"""API for transferring data to the GPU over second stream."""
class Transfer:
    """ Class for representing an asynchronous transfer. """
    def __init__(self, transfer_id, handle) -> None:
        """ Create a new Transfer object.

        Parameters
        ----------
        transfer_id : int
            The id of the asynchronous transfer.
        handle : DGLAsyncTransferer
            The handle of the DGLAsyncTransferer object that initiated the
            transfer.
        """
        ...
    
    def wait(self):
        """ Wait for this transfer to finish, and return the result.

        Returns
        -------
        Tensor
            The new tensor on the target context.
        """
        ...
    


class AsyncTransferer:
    """ Class for initiating asynchronous copies to the GPU on a second
    GPU stream.

    To initiate a transfer to a GPU:

    >>> tensor_cpu = torch.ones(100000).pin_memory()
    >>> transferer = dgl.dataloading.AsyncTransferer(torch.device(0))
    >>> future = transferer.async_copy(tensor_cpu, torch.device(0))

    And then to wait for the transfer to finish and get a copy of the tensor on
    the GPU.

    >>> tensor_gpu = future.wait()


    """
    def __init__(self, device) -> None:
        """ Create a new AsyncTransferer object.

        Parameters
        ----------
        device : Device or context object.
            The context in which the second stream will be created. Must be a
            GPU context for the copy to be asynchronous.
        """
        ...
    
    def async_copy(self, tensor, device): # -> Transfer:
        """ Initiate an asynchronous copy on the internal stream. For this call
        to be asynchronous, the context the AsyncTranserer is created with must
        be a GPU context, and the input tensor must be in pinned memory.

        Currently, only transfers to the GPU are supported.

        Parameters
        ----------
        tensor : Tensor
            The tensor to transfer.
        device : Device or context object.
            The context to transfer to.

        Returns
        -------
        Transfer
            A Transfer object that can be waited on to get the tensor in the
            new context.
        """
        ...
    


