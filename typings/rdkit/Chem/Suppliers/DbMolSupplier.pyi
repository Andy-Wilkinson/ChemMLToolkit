"""
This type stub file was generated by pyright.
"""

from rdkit.Chem.Suppliers.MolSupplier import MolSupplier

"""
Supplies a class for working with molecules from databases
"""
def warning(msg, dest=...): # -> None:
  ...

class DbMolSupplier(MolSupplier):
  """
    new molecules come back with all additional fields from the
    database set in a "_fieldsFromDb" data member

  """
  def __init__(self, dbResults, molColumnFormats=..., nameCol=..., transformFunc=..., **kwargs) -> None:
    """

      DbResults should be a subclass of Dbase.DbResultSet.DbResultBase

    """
    ...
  
  def GetColumnNames(self): # -> list[Unknown] | tuple[Unknown, ...]:
    ...
  


class ForwardDbMolSupplier(DbMolSupplier):
  """ DbMol supplier supporting only forward iteration


    new molecules come back with all additional fields from the
    database set in a "_fieldsFromDb" data member

  """
  def __init__(self, dbResults, **kwargs) -> None:
    """

      DbResults should be an iterator for Dbase.DbResultSet.DbResultBase

    """
    ...
  
  def Reset(self): # -> None:
    ...
  
  def NextMol(self): # -> None:
    """

      NOTE: this has side effects

    """
    ...
  


class RandomAccessDbMolSupplier(DbMolSupplier):
  def __init__(self, dbResults, **kwargs) -> None:
    """

      DbResults should be a Dbase.DbResultSet.RandomAccessDbResultSet

    """
    ...
  
  def __len__(self): # -> int:
    ...
  
  def __getitem__(self, idx): # -> None:
    ...
  
  def Reset(self): # -> None:
    ...
  
  def NextMol(self): # -> None:
    ...
  


