name: Build (Linux)
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Conda environment
      uses: ./.github/actions/setup-conda

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Unit test with PyTest
      run: |
        pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=chemmltoolkit --cov-report=xml --cov-report=html

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pytest-results
        path: junit/test-results.xml

    - name: Upload Code Coverage Results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pytest-cov-results
        path: htmlcov/*


  Publish:
    runs-on: ubuntu-latest
    needs: Test

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Conda environment
      uses: ./.github/actions/setup-conda

    - name: Update version number
      run: |
        sed -i "s/'$/.dev$GITHUB_RUN_NUMBER'/g" chemmltoolkit/__version__.py
        cat chemmltoolkit/__version__.py
      
    - name: Build the package
      run: |
        python setup.py sdist bdist_wheel      

    - name: Store build output as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python-package
        path: dist/*

    - name: Upload package to PyPI
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload -u __token__ -p $PYPI_API_TOKEN dist/*
